// Package v1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package v1

// Defines values for CategoryType.
const (
	Culinary  CategoryType = "culinary"
	Exotic    CategoryType = "exotic"
	Medicinal CategoryType = "medicinal"
)

// Defines values for TransactionType.
const (
	Sale   TransactionType = "sale"
	Supply TransactionType = "supply"
)

// CategoryType defines model for CategoryType.
type CategoryType string

// CommodityItem defines model for CommodityItem.
type CommodityItem struct {
	Category    CategoryType `json:"category"`
	Description string       `json:"description"`
	Id          string       `json:"id"`
	Name        string       `json:"name"`

	// Package Type of a package
	Package string  `json:"package"`
	Price   float32 `json:"price"`

	// Quantity Count of packages
	Quantity int `json:"quantity"`

	// Sku Stock keeping unit is the unit of measure in which the stocks of a material are managed
	Sku string `json:"sku"`
}

// CreateCommodityItem defines model for CreateCommodityItem.
type CreateCommodityItem struct {
	Category    CategoryType `json:"category"`
	Description string       `json:"description"`
	Name        string       `json:"name"`

	// Package Type of a package
	Package string  `json:"package"`
	Price   float32 `json:"price"`

	// Quantity Count of packages
	Quantity int `json:"quantity"`
}

// CreateCommodityRequest defines model for CreateCommodityRequest.
type CreateCommodityRequest struct {
	Data CreateCommodityItem `json:"data"`
}

// CreateCommodityResponse defines model for CreateCommodityResponse.
type CreateCommodityResponse struct {
	Data CommodityItem `json:"data"`
}

// CreateTransactionItem defines model for CreateTransactionItem.
type CreateTransactionItem struct {
	// Amount Number representing quantity change, positive or negative
	Amount      int    `json:"amount"`
	CommodityID string `json:"commodityID"`

	// CreatedAt Timestamp of the occurrence of the transaction in RFC3339 format
	CreatedAt string `json:"createdAt"`

	// Note Optional note about the transaction
	Note *string         `json:"note,omitempty"`
	Type TransactionType `json:"type"`
}

// CreateTransactionRequest defines model for CreateTransactionRequest.
type CreateTransactionRequest struct {
	Data CreateTransactionItem `json:"data"`
}

// CreateTransactionResponse defines model for CreateTransactionResponse.
type CreateTransactionResponse struct {
	Data TransactionItem `json:"data"`
}

// ErrorItem defines model for ErrorItem.
type ErrorItem struct {
	// Detail A human-readable explanation specific to this occurrence of the problem
	Detail string `json:"detail"`

	// Id Identificator of a request
	Id     string       `json:"id"`
	Meta   ErrorMeta    `json:"meta"`
	Source *ErrorSource `json:"source,omitempty"`

	// Status The HTTP status code applicable to this problem, expressed as a string value
	Status string `json:"status"`
}

// ErrorMeta defines model for ErrorMeta.
type ErrorMeta struct {
	// Timestamp Timestamp of the occurrence of the problem in RFC3339 format
	Timestamp *string `json:"timestamp,omitempty"`
}

// ErrorResponse defines model for ErrorResponse.
type ErrorResponse struct {
	Errors []ErrorItem `json:"errors"`
}

// ErrorSource defines model for ErrorSource.
type ErrorSource struct {
	// Pointer a JSON Pointer [RFC6901] to the value in the request document that caused the error
	Pointer string `json:"pointer"`
}

// GetCommoditiesResponse defines model for GetCommoditiesResponse.
type GetCommoditiesResponse struct {
	Data []CommodityItem `json:"data"`
}

// GetCommodityResponse defines model for GetCommodityResponse.
type GetCommodityResponse struct {
	Data CommodityItem `json:"data"`
}

// TransactionItem defines model for TransactionItem.
type TransactionItem struct {
	// Amount Number representing quantity change, positive or negative
	Amount      int    `json:"amount"`
	CommodityID string `json:"commodityID"`

	// CreatedAt Timestamp of the occurrence of the transaction in RFC3339 format
	CreatedAt string `json:"createdAt"`
	Id        string `json:"id"`

	// Note Optional note about the transaction
	Note *string `json:"note,omitempty"`

	// SavedAt Timestamp of saving the transaction to storage in RFC3339 format
	SavedAt string          `json:"savedAt"`
	Type    TransactionType `json:"type"`
}

// TransactionType defines model for TransactionType.
type TransactionType string

// GetCommoditiesParams defines parameters for GetCommodities.
type GetCommoditiesParams struct {
	// Name Filter commodities by name (partial match)
	Name *string `form:"name,omitempty" json:"name,omitempty"`
}

// CreateCommodityJSONRequestBody defines body for CreateCommodity for application/json ContentType.
type CreateCommodityJSONRequestBody = CreateCommodityRequest

// CreateTransactionJSONRequestBody defines body for CreateTransaction for application/json ContentType.
type CreateTransactionJSONRequestBody = CreateTransactionRequest
