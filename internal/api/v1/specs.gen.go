// Package v1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package v1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"nd/M/w0AAP//lf1Ot0IeAAA=",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
