name: Build and Deploy Docker Image to Kubernetes

on:
  push:
    branches:
      - develop
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    outputs:
      docker_tag: ${{ steps.tag.outputs.docker_tag }}
      env_file: ${{ steps.tag.outputs.env_file }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Determine Docker Image Tag
        id: tag
        run: |
          TAG_NAME=${GITHUB_REF#refs/tags/}
          if [[ "$GITHUB_REF" =~ ^refs/tags/v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            TAG=${GITHUB_REF#refs/tags/}
            echo "docker_tag=$TAG" >> $GITHUB_OUTPUT
            echo "env_file=prod.env" >> $GITHUB_OUTPUT 
          else
            SHORT_SHA=$(git rev-parse --short HEAD)
            TAG="develop-${SHORT_SHA}"
            echo "docker_tag=$TAG" >> $GITHUB_OUTPUT
            echo "env_file=dev.env" >> $GITHUB_OUTPUT  
          fi

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/Dockerfile
          push: true
          tags: shifter1703/fungicibus:${{ steps.tag.outputs.docker_tag }}

  deploy:
    needs: build-and-push
    if: ${{ success() }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set Environment File
        run: |
          echo "ENV_FILE=${{ needs.build-and-push.outputs.env_file }}" >> $GITHUB_ENV
          echo "Using environment file: ${{ needs.build-and-push.outputs.env_file }}"

      - name: Set up kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: 'v1.28.0'

      - name: Configure kubectl context
        run: |
          # Запись содержимого секрета KUBE_CONFIG в файл kubeconfig
          echo "${{ secrets.KUBE_CONFIG }}" > kubeconfig
          
          # Экспорт переменной окружения для kubectl
          export KUBECONFIG=$(pwd)/kubeconfig
          
          # Проверка содержимого конфигурации
          kubectl config view --raw

      - name: Update Kubernetes Deployment
        run: |
          echo "Updating Kubernetes deployment with image: shifter1703/fungicibus:${{ needs.build-and-push.outputs.docker_tag }}"
          kubectl set image deployment/myapp myapp=shifter1703/fungicibus:${{ needs.build-and-push.outputs.docker_tag }}
          kubectl rollout status deployment/myapp

      - name: Apply Kubernetes changes (if needed)
        run: |
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml

      - name: Get Kubernetes pod status
        run: |
          kubectl get pods
